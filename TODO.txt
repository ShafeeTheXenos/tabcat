Tasks:
- DART (cleanup)
  - trim blackness at beginning and end of video, handle with JS instead.
  - margins at top and bottom of video are mysterious; is it not square?
    - no, it's 512x480
  - videos don't auto-play on Android (probably need to use canplay event)
  - videos are too tall on android (even when played independently)
  - make video files smaller?

- CouchDB:
  - handle interpretations through lists
    - e.g. /tabcat-data/_design/dart/_list/interpret/core/task?include_docs=true&startkey=["dart"]&endkey=["dart",[]]

Cleanup:
- don't need tasks to be launchable
- fix favicon
- task.start() should require user and encounter ID
- require user before attempting to continue encounter

Offline Mode:
- separate generic CouchDB code (tabcat.couch) from DB code (tabcat.db)
- show status of offline mode
  - status of manifest
  - documents waiting for upload?
- might as well spill whenever we get error 0 (navigator.onLine is unreliable anyway)
- get by without network
  - allow tasks to start without network
  - store taskInfo in localStorage
    - separate out global task info (which tasks are available) from encounter task info (which tasks are done)
  - allow user to log in without password (detour to login page on next page load when online)
    - don't close current encounter if user is just entering their password!
  - keep track of encounterTasksFinished in localStorage
- simple local storage of docs
  - sync locally stored docs with server

Security/authentication:
- user field must match userCtx or end with '?'
- uploadedBy field must match userCtx
- auto-uploading of offline docs should reflect this
- keep track of docs spilled by current session
  - other docs are uploaded with '?' appended to user field, even if they match your
    user. We assume that anyone could have put stuff into localStorage on your browser.
- tag task and event docs with user too

- support for re-opening tasks where we left off
- demo mode for tasks
- Android fullscreen mode (window.scrollTo(0, 1))
- fix max height of inner div in inches, when possible, using something like:
  https://github.com/tombigel/detect-zoom
- Back button in standalone mode

Refactors/Fixes:
- use on() rather than bind() in tasks, attach new div before binding events
- break out staircasing code into TabCAT module
- automated JavaScript testing framework
- automated Selenium testing framework

Puzzling issues to revisit:
- Log Out does not clear cookies in standalone browsing mode on iPad
  - currently manually expiring login cookies
- iOS Safari and chrome do not save login, password (actually submit form,
  target iframe?)
